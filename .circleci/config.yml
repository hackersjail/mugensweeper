version: 2.1

executors:
  default:
    working_directory: ~/repo
    docker:
      - image: circleci/node:10.16.0
        environment:
          TZ: Asia/Tokyo

commands:
  ##
  # Cache management
  ##
  restore_packages:
    steps:
      - restore_cache:
          name: Restore npm dependencies
          key: yarn-v1-{{ checksum "yarn.lock" }}
  save_packages:
    steps:
      - run:
          name: Install npm dependencies
          command: yarn --frozen-lockfile --non-interactive
      - save_cache:
          name: Cache npm dependencies
          key: yarn-v1-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
            - node_modules
  persist_data:
    steps:
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
  attach_data:
    steps:
      - attach_workspace:
          at: .

  ##
  # Webhooks
  ##
  notify_deployment_failed:
    steps:
      - run:
          name: Notify deployment failed
          command: sh ./.circleci/webhook.sh
          environment:
            DEPLOY_RESULT: failed
            WEBHOOK_COLOR: "#d10c20"
          when: on_fail
  notify_deployment_succeeded:
    steps:
      - run:
          name: Notify deployment succeeded
          command: sh ./.circleci/webhook.sh
          environment:
            DEPLOY_RESULT: succeeded
            WEBHOOK_COLOR: "#41aa58"

jobs:
  ##
  # Commit workflow phase 1: Setup
  ##
  setup:
    executor:
      name: default
    steps:
      - checkout
      - restore_packages
      - save_packages
      - persist_data

  ##
  # Commit workflow phase 2: Lint + Test
  ##
  lint:
    executor:
      name: default
    steps:
      - checkout
      - attach_data
      - run:
          name: Run lint
          command: yarn lint
  test:
    executor:
      name: default
    steps:
      - checkout
      - attach_data
      - run:
          name: Run test
          command: yarn test:coverage --runInBand
      - run:
          name: Run test with current Node.js version
          command: npx --package node@latest node ./node_modules/.bin/jest --config api/jest.config.js --runInBand
      - run:
          name: Report coverage results
          command: yarn coverage

  ##
  # Commit workflow phase 3: Deploy API server
  ##
  deploy_api:
    executor:
      name: default
    steps:
      - checkout
      - run:
          name: Install AWS CLI
          command: |
            sudo apt-get update
            sudo apt-get install -y awscli
      - run:
          name: Deploy API server
          command: |
            [ $CIRCLE_BRANCH = "master" ] && group=$AWS_PROD_GROUP || group=$AWS_STG_GROUP
            aws deploy create-deployment --application-name $AWS_APP_NAME --deployment-group-name $group \
            --github-location repository="$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME",commitId="$CIRCLE_SHA1"
      - notify_deployment_failed
      - notify_deployment_succeeded

  ##
  # Weekly workflow: Audit
  ##
  audit:
    executor:
      name: default
    steps:
      - checkout
      - restore_packages
      - run:
          name: Run a security audit
          command: yarn audit

workflows:
  commit:
    jobs:
      # Phase 1: Setup
      - setup

      # Phase 2: Lint + Test
      - lint:
          requires:
            - setup
      - test:
          requires:
            - setup

      # Phase 3: Deploy API server
      - deploy_api:
          requires:
            - lint
            - test
          filters:
            branches:
              only:
                - master
                - develop
  weekly:
    jobs:
      - audit
    triggers:
      - schedule:
          cron: "0 0 * * 6" # Every Saturday 9:00 AM
          filters:
            branches:
              only:
                - develop
